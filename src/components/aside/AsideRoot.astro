---
import type { MarkdownHeading } from "../../util/generatePages";
import Aside from "./Aside.astro";

interface Props {
  headings: MarkdownHeading[];
}
const { headings } = Astro.props;
---

<aside-cmp>
  <Aside {headings} isFirst />
</aside-cmp>

<script>
  // https://www.emgoto.com/react-table-of-contents was super valuble when building this!
  import type { AsideItem } from "./AsideItem";

  class AsideComponent extends HTMLElement {
    headingElements: HTMLElement[] = [];
    childElements: AsideItem[] = [];
    visibleHeadings: Set<string> = new Set();

    connectedCallback() {
      this.headingElements = Array.from(document.querySelectorAll("#article h2, #article h3, #article h4"));
      this.childElements = Array.from(this.querySelectorAll("aside-item"));
      const observer = new IntersectionObserver((headings) => this.observerCallback(headings), {
        // ignore bottom 40% of the screen
        rootMargin: "0px 0px -40% 0px",
      });

      for (const heading of this.headingElements) {
        observer.observe(heading);
      }
    }

    observerCallback(headings: IntersectionObserverEntry[]): void {
      for (const heading of headings) {
        if (heading.isIntersecting) {
          this.visibleHeadings.add(heading.target.id);
        } else {
          this.visibleHeadings.delete(heading.target.id);
        }
      }

      if (this.visibleHeadings.size > 0) {
        for (const elem of this.childElements) {
          const active = this.visibleHeadings.has(elem.dataset.slug!);
          elem.setActive(active);
        }
      }
    }
  }

  customElements.define("aside-cmp", AsideComponent);
</script>
