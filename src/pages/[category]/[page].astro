---
import type { InferGetStaticPropsType, GetStaticPaths } from "astro";
import { getCollection, render } from "astro:content";
import { CATEGORIES } from "../../consts";
import { createSlug, sortProjects, getPostUrl, getCategoryUrl } from "../../util/generatePages";

import DesktopToc from "../../components/DesktopToc.svelte";
import Layout from "../../layouts/Layout.astro";

export const getStaticPaths = (async () => {
  const posts = await getCollection("posts");

  return CATEGORIES.flatMap((category) => {
    const categoryPosts = posts.filter((post) => post.data.category === category);

    categoryPosts.sort(sortProjects);

    return categoryPosts.map((project) => ({
      params: { category: createSlug(category), page: createSlug(project.data.title) },
      props: { project, titles: { category, page: project.data.title } },
    }));
  });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { project, titles } = Astro.props;
const { Content, headings } = await render(project);

const posts = await getCollection("posts");
const categories = CATEGORIES.map((category) => {
  const categoryPosts = posts.filter((post) => post.data.category === category);

  categoryPosts.sort(sortProjects);

  return {
    name: category,
    href: getCategoryUrl(category),
    pages: categoryPosts.map((post) => {
      const href = getPostUrl(category, post.data.title);
      return { name: post.data.title, href, current: href === Astro.url.pathname };
    }),
  };
});
---

<Layout title={titles.page + " | " + titles.category} description={project.data.summary} categories={categories}>
  <main class="flex flex-1 flex-col pb-2 lg:min-w-0 lg:pt-2 lg:pr-2 lg:pl-(--container-2xs)">
    <div
      class="mx-auto flex w-full max-w-6xl gap-x-10 p-6 lg:rounded-lg lg:bg-white lg:p-10 lg:shadow-xs lg:ring-1 lg:ring-gray-950/5 dark:lg:bg-gray-900 dark:lg:ring-white/10"
    >
      <div class="w-full flex-1">
        <article id="article" class="prose max-w-none pb-8 prose-gray dark:prose-invert">
          <Content />
        </article>
      </div>
      <DesktopToc client:load headings={headings} />
    </div>
  </main>
</Layout>
