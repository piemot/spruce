@import "tailwindcss";
@plugin "@tailwindcss/typography";
@plugin "@tailwindcss/forms";

@theme {
  --color-bg: var(--color-gray-100);
  --color-accent-primary: var(--color-emerald-800);
  --color-accent-secondary: var(--color-emerald-700);

  --color-card: var(--color-gray-100);
  --color-card-foreground: var(--color-gray-950);
  --color-muted: var(--color-gray-50);
  --color-muted-foreground: var(--color-gray-500);

  --color-info: var(--color-blue-500);
  --color-warning: var(--color-amber-500);
  --color-error: var(--color-red-500);
  --color-success: var(--color-emerald-500);

  /* TODO: cleanup */
  --sl-color-accent-low: #c7d6ff;
  --sl-color-accent: #364bff;
  --sl-color-accent-high: #182775;
  --sl-color-white: #17181c;
  --sl-color-gray-1: #24272f;
  --sl-color-gray-2: #353841;
  --sl-color-gray-3: #545861;
  --sl-color-gray-4: #888b96;
  --sl-color-gray-5: #c0c2c7;
  --sl-color-gray-6: #eceef2;
  --sl-color-gray-7: #f5f6f8;
  --sl-color-black: #ffffff;

  --font-*: initial;
  --default-font-family: var(--font-body);

  /* based on --font-sans */
  --font-body:
    "Source Sans 3 Variable", ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji",
    "Segoe UI Symbol", "Noto Color Emoji";
  --font-header:
    "Space Grotesk Variable", ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji",
    "Segoe UI Symbol", "Noto Color Emoji";
  /* based on --font-mono */
  --font-mono:
    "Space Mono", ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

@custom-variant dark (&:where([data-theme=dark], [data-theme=dark] *));

@layer base {
  :root {
    @variant dark {
      --color-card: var(--color-gray-900);
      --color-card-foreground: var(--color-gray-50);
      --color-muted: var(--color-gray-950);
      --color-muted-foreground: var(--color-gray-400);
    }
  }
}

/* fix `tw-prose` `kbd` styling: https://github.com/tailwindlabs/tailwindcss-typography/issues/386 */
@layer utilities {
  .prose {
    & :is(:where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *))) {
      --tw-shadow:
        0 0 0 1px var(--tw-shadow-color, color-mix(in oklab, var(--tw-prose-kbd-shadows) 10%, transparent)),
        0 3px 0 var(--tw-shadow-color, color-mix(in oklab, var(--tw-prose-kbd-shadows) 10%, transparent));
      box-shadow:
        var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
        var(--tw-shadow);
    }
  }
  .prose-gray {
    --tw-prose-kbd-shadows: var(--color-gray-900);
  }
  .prose-slate {
    --tw-prose-kbd-shadows: var(--color-slate-900);
  }
  .prose-stone {
    --tw-prose-kbd-shadows: var(--color-stone-900);
  }
  .prose-neutral {
    --tw-prose-kbd-shadows: var(--color-neutral-900);
  }
  .prose-zinc {
    --tw-prose-kbd-shadows: var(--color-zinc-900);
  }
}

@layer utilities {
  .prose {
    /* prevent scrolling from snapping all the way to the top */
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      scroll-margin-top: calc(var(--spacing) * 6);
    }

    samp {
      @apply mx-1 font-semibold text-emerald-900;
    }
    /* Extra styling (mostly for GitHub Flavored Markdown prose) */
    li.task-list-item {
      @apply flex list-none items-center gap-2;
    }
    li.task-list-item input[type="checkbox"] {
      @apply size-4 rounded-md border border-gray-400 bg-white shadow-xs outline-none;
    }
    li.task-list-item input[type="checkbox"]:checked {
      @apply border-none bg-accent-secondary;
    }

    ol li::marker {
      @apply font-semibold;
    }
  }
}
